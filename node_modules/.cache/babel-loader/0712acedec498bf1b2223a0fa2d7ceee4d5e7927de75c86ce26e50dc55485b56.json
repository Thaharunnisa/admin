{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thaharu\\\\Desktop\\\\Jobs\\\\admin\\\\src\\\\AddJob.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const AddJob = () => {\n//   const [job, setJob] = useState({\n//     title: '',\n//     company: '',\n//     location: '',\n//     affiliateLink: '',\n//   });\n\n//   const handleChange = (e) => {\n//     setJob({ ...job, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post('http://localhost:5000/api/jobs', job);\n//       alert('Job added successfully');\n//     } catch (error) {\n//       console.error('Error adding job:', error);\n//       alert('Failed to add job');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         name=\"title\"\n//         placeholder=\"Job Title\"\n//         value={job.title}\n//         onChange={handleChange}\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"company\"\n//         placeholder=\"Company\"\n//         value={job.company}\n//         onChange={handleChange}\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"location\"\n//         placeholder=\"Location\"\n//         value={job.location}\n//         onChange={handleChange}\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"affiliateLink\"\n//         placeholder=\"Affiliate Link\"\n//         value={job.affiliateLink}\n//         onChange={handleChange}\n//       />\n//       <button type=\"submit\">Add Job</button>\n//     </form>\n//   );\n// };\n\n// export default AddJob;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddJob = () => {\n  _s();\n  const [job, setJob] = useState({\n    title: '',\n    company: '',\n    location: '',\n    affiliateLink: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false); // To handle loading state\n  const [error, setError] = useState(''); // To handle form errors\n\n  const handleChange = e => {\n    setError(''); // Clear error on input change\n    setJob({\n      ...job,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Simple URL validation function\n  const isValidUrl = url => {\n    const urlPattern = new RegExp('^(https?:\\\\/\\\\/)?' +\n    // validate http/https\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' +\n    // validate domain\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' +\n    // validate IP\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' +\n    // validate port and path\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' +\n    // validate query string\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i');\n    return !!urlPattern.test(url);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true); // Disable form during submission\n\n    // Check if the affiliate link is a valid URL\n    if (!isValidUrl(job.affiliateLink)) {\n      setError('Please provide a valid URL for the affiliate link.');\n      setIsSubmitting(false);\n      return;\n    }\n    try {\n      await axios.post('http://localhost:5000/api/jobs', job); // Backend API endpoint\n      alert('Job added successfully');\n      setJob({\n        title: '',\n        company: '',\n        location: '',\n        affiliateLink: ''\n      }); // Reset form after submission\n    } catch (error) {\n      console.error('Error adding job:', error);\n      setError('Failed to add job. Please try again.');\n    } finally {\n      setIsSubmitting(false); // Enable form after submission\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-job-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Job Title\",\n      value: job.title,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"company\",\n      placeholder: \"Company\",\n      value: job.company,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      placeholder: \"Location\",\n      value: job.location,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"affiliateLink\",\n      placeholder: \"Affiliate Link (e.g. https://example.com/job123)\",\n      value: job.affiliateLink,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      children: isSubmitting ? 'Adding Job...' : 'Add Job'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(AddJob, \"6DVT2l8DR9pgMOhLeRqzwLtYr+8=\");\n_c = AddJob;\nexport default AddJob;\nvar _c;\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddJob","_s","job","setJob","title","company","location","affiliateLink","isSubmitting","setIsSubmitting","error","setError","handleChange","e","target","name","value","isValidUrl","url","urlPattern","RegExp","test","handleSubmit","preventDefault","post","alert","console","onSubmit","className","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/thaharu/Desktop/Jobs/admin/src/AddJob.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const AddJob = () => {\r\n//   const [job, setJob] = useState({\r\n//     title: '',\r\n//     company: '',\r\n//     location: '',\r\n//     affiliateLink: '',\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setJob({ ...job, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post('http://localhost:5000/api/jobs', job);\r\n//       alert('Job added successfully');\r\n//     } catch (error) {\r\n//       console.error('Error adding job:', error);\r\n//       alert('Failed to add job');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"title\"\r\n//         placeholder=\"Job Title\"\r\n//         value={job.title}\r\n//         onChange={handleChange}\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"company\"\r\n//         placeholder=\"Company\"\r\n//         value={job.company}\r\n//         onChange={handleChange}\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"location\"\r\n//         placeholder=\"Location\"\r\n//         value={job.location}\r\n//         onChange={handleChange}\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"affiliateLink\"\r\n//         placeholder=\"Affiliate Link\"\r\n//         value={job.affiliateLink}\r\n//         onChange={handleChange}\r\n//       />\r\n//       <button type=\"submit\">Add Job</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default AddJob;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AddJob = () => {\r\n  const [job, setJob] = useState({\r\n    title: '',\r\n    company: '',\r\n    location: '',\r\n    affiliateLink: '',\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // To handle loading state\r\n  const [error, setError] = useState(''); // To handle form errors\r\n\r\n  const handleChange = (e) => {\r\n    setError(''); // Clear error on input change\r\n    setJob({ ...job, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Simple URL validation function\r\n  const isValidUrl = (url) => {\r\n    const urlPattern = new RegExp(\r\n      '^(https?:\\\\/\\\\/)?' + // validate http/https\r\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // validate domain\r\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // validate IP\r\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // validate port and path\r\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // validate query string\r\n      '(\\\\#[-a-z\\\\d_]*)?$',\r\n      'i'\r\n    );\r\n    return !!urlPattern.test(url);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true); // Disable form during submission\r\n\r\n    // Check if the affiliate link is a valid URL\r\n    if (!isValidUrl(job.affiliateLink)) {\r\n      setError('Please provide a valid URL for the affiliate link.');\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/jobs', job); // Backend API endpoint\r\n      alert('Job added successfully');\r\n      setJob({\r\n        title: '',\r\n        company: '',\r\n        location: '',\r\n        affiliateLink: '',\r\n      }); // Reset form after submission\r\n    } catch (error) {\r\n      console.error('Error adding job:', error);\r\n      setError('Failed to add job. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false); // Enable form after submission\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"add-job-form\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Job Title\"\r\n        value={job.title}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"company\"\r\n        placeholder=\"Company\"\r\n        value={job.company}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"location\"\r\n        placeholder=\"Location\"\r\n        value={job.location}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"affiliateLink\"\r\n        placeholder=\"Affiliate Link (e.g. https://example.com/job123)\"\r\n        value={job.affiliateLink}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* Display error if there's a validation issue */}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <button type=\"submit\" disabled={isSubmitting}>\r\n        {isSubmitting ? 'Adding Job...' : 'Add Job'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddJob;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}